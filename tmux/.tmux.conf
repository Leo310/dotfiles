# ==========================
# ===  General settings  ===
# ==========================

set -g activity-action other
set -g assume-paste-time 1
set -g base-index 0
set -g bell-action any
set -g default-command ''
set -g default-shell /bin/bash
# set -g default-size 80x24
set -g destroy-unattached off
set -g detach-on-destroy on
set -g display-panes-active-colour red
set -g display-panes-colour blue
set -g display-panes-time 1000
set -g display-time 750
set -g history-limit 2000
set -g key-table root
set -g lock-after-time 0
set -g lock-command "lock -np"
set -g message-command-style bg=black,fg=yellow
set -g message-style bg=yellow,fg=black
set -g mouse on
set -g prefix C-a
set -g prefix2 None
set -g renumber-windows off
set -g repeat-time 500
set -g set-titles off
set -g set-titles-string "#S:#I:#W - \"#T\" #{session_alerts}"
set -g silence-action other
set -g update-environment[0] DISPLAY
set -g update-environment[1] KRB5CCNAME
set -g update-environment[2] SSH_ASKPASS
set -g update-environment[3] SSH_AUTH_SOCK
set -g update-environment[4] SSH_AGENT_PID
set -g update-environment[5] SSH_CONNECTION
set -g update-environment[6] WINDOWID
set -g update-environment[7] XAUTHORITY
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g word-separators " "
set -g default-terminal "konsole-256color"

set -g base-index 1
setw -g pane-base-index 1


# ==========================
# ===   Key bindings     ===
# ==========================

# -T key table like root, prefix, off
# -n alias for root table
# -r Allow multiple commands to be entered without pressing the prefix-key again in the specified time milliseconds (the default is 500)
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# # Alt-arrow keys to switch panes
# bind -n M-l select-pane -L
# bind -n M-h select-pane -R
# bind -n M-k select-pane -U
# bind -n M-j select-pane -D
#Set easier window split keys
bind-key -T prefix o split-window -h -c "#{pane_current_path}"
bind-key -T prefix u split-window -v -c "#{pane_current_path}"
bind-key -T prefix c new-window -c "#{pane_current_path}"
bind-key -r -T prefix       M-k              resize-pane -U 5
bind-key -r -T prefix       M-j            resize-pane -D 5
bind-key -r -T prefix       M-h            resize-pane -L 5
bind-key -r -T prefix       M-l           resize-pane -R 5

# Easy config reload
bind-key -T prefix r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."
# Start windows and panes at 2, not 0

# vim keymap mode
set-window-option -g mode-keys vi



# =====================================
# ===    Appearence and status bar  ===
# ======================================

# set -g @plugin 'dracula/tmux'  
# set -g @dracula-show-fahrenheit false
# set -g @dracula-border-contrast true
# set -g @dracula-show-left-icon session
# set-option -g status-justify left

# dracula colors
main_color="#6272a4" # purple
green_color="#50fa7b"
red_color="#ff5555"
yellow_color="#ffb86c"
text_color="white"
remote_color="#BC1142"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

set -g status-style "fg=$text_color,bg=$main_color" 
setw -g pane-active-border-style fg="$main_color"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""
# separator_powerline_right="|"

setw -g window-status-format " #I:#W "
setw -g window-status-current-format "$separator_powerline_left#[fg=$main_color,bg=$text_color] #I:#W #[fg=$text_color bg=$main_color]$separator_powerline_right"

# widgets for status bar
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_session=" #S "
wg_date="%h %d %H:%M"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')"

# online and offline icon for tmux-online-status
set -g @online_icon "#[fg=$green_color]● "
set -g @offline_icon "#[fg=$red_color]● " 

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
# set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'"
# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$green_color"
set -g @sysstat_cpu_color_medium "$yellow_color"
set -g @sysstat_cpu_color_stress "$red_color"

set -g @sysstat_mem_color_low "$green_color"
set -g @sysstat_mem_color_medium "$yellow_color"
set -g @sysstat_mem_color_stress "$red_color"


# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$main_color"
set -g @prefix_highlight_bg "$text_color"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$main_color,bg=$text_color"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | $wg_user_host | $wg_date #{online_status}"



# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================

# set -g @copy_use_osc52_fallback on

bind j copy-mode
bind p paste-buffer
bind C-p choose-buffer

yank="~/.tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# for ssh. for more info https://www.freecodecamp.org/news/tmux-in-practice-local-and-nested-remote-tmux-sessions-4f7ba5db8795/
# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux.remote.conf'

color_status_text="colour245"
color_window_off_status_bg="colour238"
color_light="white" #colour015
color_dark="colour232" # black= colour232
color_window_off_status_current_bg="colour254"
bind -n M-h \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_left#[default] #I:#W #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S 

bind -T off M-h\
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S



# ============================
# ===       Plugins        ===
# ============================

# copy to clipbaord
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat'
run '~/.tmux/plugins/tpm/tpm'
